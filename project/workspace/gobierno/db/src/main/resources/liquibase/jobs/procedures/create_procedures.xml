<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!-- ***************************** -->
    <!--  DROP PROCEDURES CHANGE-SETS  -->
    <!-- ***************************** -->

    <!-- ******************************* -->
    <!--  DROPS CONSUMO                  -->
    <!-- ******************************* -->

    <changeSet id="Drop procedure log_job_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_job_consumo'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="log_job_consumo"/>
    </changeSet>

    <changeSet id="Drop procedure get_last_job" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_last_job'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="get_last_job"/>
    </changeSet>

    <changeSet id="Drop procedure log_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_consumo'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="log_consumo"/>
    </changeSet>

    <changeSet id="Drop procedure log_consumo_result" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_consumo_result'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="log_consumo_result"/>
    </changeSet>

    <changeSet id="Drop procedure get_last_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_last_consumo'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="get_last_consumo"/>
    </changeSet>

    <changeSet id="Drop procedure get_job_by_id" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_job_by_id'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="get_job_by_id"/>
    </changeSet>

    <changeSet id="Drop procedure is_valid_notification_update" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'is_valid_notification_update'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="is_valid_notification_update"/>
    </changeSet>

    <changeSet id="Drop procedure log_notification_update" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_notification_update'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="log_notification_update"/>
    </changeSet>

    <!-- ******************************* -->
    <!--  DROPS SORTEO                   -->
    <!-- ******************************* -->

    <changeSet id="Drop procedure get_ultimo_ganador" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_ultimo_ganador'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="get_ultimo_ganador"/>
    </changeSet>

    <changeSet id="Drop procedure insert_participante" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'insert_participante'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="insert_participante"/>
    </changeSet>

    <changeSet id="Drop procedure update_participante" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'update_participante'
            </sqlCheck>
        </preConditions>
        <dropProcedure procedureName="update_participante"/>
    </changeSet>


    <!-- ******************************* -->
    <!--  CREATE PROCEDURES CHANGE-SETS  -->
    <!-- ******************************* -->

    <!-- ******************************* -->
    <!--  CREATE CONSUMO                 -->
    <!-- ******************************* -->

    <changeSet id="Create procedure log_job_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_job_consumo'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/log_job_consumo.sql"/>
    </changeSet>

    <changeSet id="Create procedure get_last_job" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_last_job'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/get_last_job.sql"/>
    </changeSet>

    <changeSet id="Create procedure log_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_consumo'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/log_consumo.sql"/>
    </changeSet>

    <changeSet id="Create procedure log_consumo_result" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_consumo_result'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/log_consumo_result.sql"/>
    </changeSet>

    <changeSet id="Create procedure get_last_consumo" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_last_consumo'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/get_last_consumo.sql"/>
    </changeSet>

    <changeSet id="Create procedure get_job_by_id" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_job_by_id'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/get_job_by_id.sql"/>
    </changeSet>

    <changeSet id="Create procedure is_valid_notification_update" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'is_valid_notification_update'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/is_valid_notification_update.sql"/>
    </changeSet>

    <changeSet id="Create procedure log_notification_update" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'log_notification_update'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/consumo/log_notification_update.sql"/>
    </changeSet>

    <!-- ******************************* -->
    <!--  CREATE SORTEO                  -->
    <!-- ******************************* -->

    <changeSet id="Create procedure get_ultimo_ganador" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'get_ultimo_ganador'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/get_ultimo_ganador.sql"/>
    </changeSet>

    <changeSet id="Create procedure insert_participante" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'insert_participante'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/insert_participante.sql"/>
    </changeSet>

    <changeSet id="Create procedure update_participante" author="DAS-Team" runAlways="true"
               runOnChange="true">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE ROUTINE_TYPE = 'PROCEDURE'
                AND SPECIFIC_CATALOG = 'db_gobierno'
                AND ROUTINE_NAME = 'update_participante'
            </sqlCheck>
        </preConditions>
        <sqlFile
                path="/src/main/resources/liquibase/jobs/procedures/update_participante.sql"/>
    </changeSet>

</databaseChangeLog>